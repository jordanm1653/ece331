===============================================================================
Jordan Millington
Homework 8
ECE 331
Due: 3/23/2015
===============================================================================
8.1
--------------------
IP:	 45.23.56.78
Netmask: 255.255.192.0

   Network     Broadcast    
 ----------- -------------- 
  45.23.0.0   45.23.63.255 

8.2
--------------------
16382

8.3
--------------------
A. Tutorial Source: 
	http://www.binarytides.com/socket-programming-c-linux-tutorial/

B. This tutorial has been completed

C.
	socket(): 		The point of connection for two machines or services
	bind(): 		Determines which "door" to take to the outside
	listen():		The operator waiting for connections	
	accept():		The "doorman" for incoming connections
	getaddrinfo():	Performs the "background check"
	connect():		Allows the connection	

8.4
--------------------
#!/usr/bin/perl

# dec2bin.pl
#
# J. Millington
#
# Prints an unsigned integer passed on the command line in binary

# Check for unsigned integer and print as binary
if ($ARGV[0] =~ m/^\d+$/){
	printf "%b\n",$ARGV[0];
}

8.5
--------------------
**INCOMPLETE**

#!/usr/bin/perl

# ipsub2bcstnet
#
# J. Millington
#
# Read ip and subnet address from commandline and print broadcast and network
# address

# Check input for correct IP address form
#if (<> =~ /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}
#		(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/){
#if ($ARGV[0] =~ m/^[1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]/){
##if (<> =~ /(25[0-5]|2[0-4]\d|1?\d{1,2})\./){
#	print "Success! part1\n";
#}
#if ($ARGV[0] =~ m/^([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.
#		([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.
#		([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.
#		([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/){
#			
#	printf "Success! $1\n";
#};
print "$ARGV[0]\n";
my @ip = split(/\./,$ARGV[0]);
#foreach $ipoctet (@ip){
#	printf "$ipoctet\n";
#}
$sn = ($ip[0] & 255);
printf "%d\n",$sn[0];

8.6
--------------------
See Attached
