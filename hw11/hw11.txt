===============================================================================
Jordan Millington
Homework 11
ECE 331
Due: 4/16/2015
===============================================================================
11.1
--------------------
#!/usr/bin/python
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# i2cget.py
#
# Retrieve raw ADC value from temp sensor on ECE XMEGA expansion  board
# 
# Expansion Board I2C Address: 0x41 (sudo i2cdetect -y 1)
#
# AUTHOR: Jordan Millington

import struct
import smbus
from collections import namedtuple

bus = smbus.SMBus(1)	# 1 = /dev/i2c-1

#
# i2c Address of xmega
#
addr = 0x41

#
# Read 10 bytes from xmega
#
try:
	data = bus.read_i2c_block_data(addr,0x00,10)
except IOError:
	print "unable to read from i2c bus"

#
# Format data from i2c read
#
buff= struct.unpack('<HHHHBB', struct.pack('BBBBBBBBBB', *data))

#
# Create dictionary from i2c data
#
keys = ['roomcal','hotcal','adcal','v','room','hot']
temp_t = dict(zip(keys, buff))

print 'Raw Temperature Measurement: %d' % temp_t['v']

11.2
--------------------
#!/usr/bin/python
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# bode.py
#
# Create a Bode plot of transfer funtion:
#
#	              8000s
#	G(s) = --------------------
#	        s^2 + 5000s + 10^6
#
#	where: s = jw from 10 to 10k rad/sec
# 
# PACKAGES:
#	 python-scypi
#	 python-matplotlib
#	 python-tk
#
# AUTHOR: Jordan Millington

#
# Imports
#
import numpy as np
from scipy import signal
import matplotlib.pyplot as plt

#
# Transfer function as LTI
#
sig = signal.lti([8000, 0],[1, 5000, 10^6])

#
# Frequency range & Bode magnitude
# 	bode() returns magnitude in dB
#
w = np.logspace(1,4,100)
w, mag, phase = signal.bode(sig,w)

#
# Plot setup
#
plt.figure()
plt.semilogx(w, mag)
plt.title('Bode Plot of G(s) = 8000s / (s^2 + 5000s + 10^6)')
plt.xlabel('Frequency [rad/sec]')
plt.ylabel('Amplitude [dB]')
plt.grid(axis='both',which='both')
plt.show()
